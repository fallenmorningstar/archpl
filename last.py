import telebot
import sqlite3
import markups_for_bot
import database
import config
from telebot import types
import os, sys
from requests.exceptions import ConnectionError, ReadTimeout

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
database.check_db()

# –ê–∫—Ç–∏–≤–∏–∑–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞
bot = telebot.TeleBot(config.token)


@bot.message_handler(commands=['start'])
def start(message):
    conn = sqlite3.connect("spec_db.db")
    cursor = conn.cursor()
    sql = "SELECT * FROM users WHERE user_id=?"
    cursor.execute(sql, [(message.from_user.id)])
    user = cursor.fetchone()
    if not user:
        bot.send_message(message.chat.id,
                         '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã c –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç ',
                         reply_markup=markups_for_bot.NewUser)
    else:
        bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ö–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç?\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—Ä–∞—Ç–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ '
                                          '–Ω–∞–ø–∏—à–∏—Ç–µ /help, –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –≤ –∫–Ω–æ–ø–∫–∞—Ö —Ä–∞–∑–¥–µ–ª–∞',
                         reply_markup=markups_for_bot.main_menu)


@bot.message_handler(content_types=['contact'])
def add_user(message):
    conn = sqlite3.connect("spec_db.db")
    cursor = conn.cursor()
    newdata = [
        (message.contact.user_id, message.contact.first_name, message.contact.phone_number, '–ë–µ–∑ —Ä–∞–π–æ–Ω–∞', '')]
    cursor.executemany("INSERT INTO users VALUES (?,?,?,?,?)", newdata)
    conn.commit()
    bot.send_message(message.chat.id,
                     'üëè –ü—Ä–∏—Å—Ç—É–ø–∏–º –∫ —Ä–∞–±–æ—Ç–µ ' + message.from_user.first_name + ' üëè\n'
                                                                               '–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–µ.'
                                                                               '\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å —Ä–∞–∑–¥–µ–ª.',
                     reply_markup=markups_for_bot.main_menu)


@bot.message_handler(commands=['realtok'])
def admin(message):
    text = message.text.lower()
    bot.send_message(message.chat.id, '–í—ã –≤ –∞–¥–º–∏–Ω–∫–µ. –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª—ã –∏ —Ä–∞–π–æ–Ω—ã',
                     reply_markup=markups_for_bot.hidden_menu)
    bot.register_next_step_handler(message, funk)


def funk(message):
    text = message.text.lower()
    if text == "–¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª ‚ûï":
        bot.send_message(message.chat.id, '‚ö†Ô∏è–ü—Ä–∞–≤–∏–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¢–æ—á–∫–∏ –°–ú–ò –≤ —á–∞—Ç-–±–æ—Ç: ‚ö†Ô∏è\n\n'
                                          '1) –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª –≤ Telegram Desktop\n'
                                          '2) –î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç-–±–æ—Ç–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫—É—Ä–∏—Ä—É—é—â–µ–≥–æ –∫–∞–Ω–∞–ª –≤ –≥—Ä—É–ø–ø—É '
                                          '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤\n'
                                          '\nüìå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–ø–∏—à–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø–æ —à–∞–±–ª–æ–Ω—É: '
                                          '\n–ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã ; –ù–æ–º–µ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –°–ú–ò ; –°—Å—ã–ª–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É\n'
                                          'üìå –ü—Ä–∏–º–µ—Ä: \n–ê–∫–∏–º–∞—Ç –≥. –ö–æ—Å—Ç–∞–Ω–∞–π;+777797979797;https://t.me/akimatkostanayy'
                         , reply_markup=markups_for_bot.back_menu)
        bot.register_next_step_handler(message, add_smi)
    elif text == "—É–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª ‚ûñ":
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "SELECT * FROM groups"
        cursor.execute(sql)
        articles = cursor.fetchall()
        # print(articles)
        rajon_menu = telebot.types.ReplyKeyboardMarkup()

        for i in articles:
            but = types.KeyboardButton(text=str(i[0]))
            rajon_menu.add(but.text.strip("(),'"))
        rajon_menu.add(markups_for_bot.back)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫–æ–π –∫–∞–Ω–∞–ª –±—É–¥–µ–º —É–¥–∞–ª—è—Ç—å', reply_markup=rajon_menu)
        bot.register_next_step_handler(message, delete_smi)
    elif text == "–¥–æ–±–∞–≤–∏—Ç—å —Ä–∞–π–æ–Ω ‚ûï":
        bot.send_message(message.chat.id, '‚ö†Ô∏è–ü—Ä–∞–≤–∏–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –†–∞–π–æ–Ω–∞ –≤ —á–∞—Ç-–±–æ—Ç: ‚ö†Ô∏è\n\n'
                                          '1) –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª –≤ Telegram Desktop\n'
                                          '2) –î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç-–±–æ—Ç–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫—É—Ä–∏—Ä—É—é—â–µ–≥–æ –∫–∞–Ω–∞–ª –≤ –≥—Ä—É–ø–ø—É '
                                          '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤\n'
                                          '\nüìå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–ø–∏—à–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø–æ —à–∞–±–ª–æ–Ω—É: '
                                          '\n–ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã ; –°—Å—ã–ª–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É\n'
                                          'üìå –ü—Ä–∏–º–µ—Ä: \n–†–∞–π–æ–Ω –ö–°–ö;https://t.me/rajonksk',
                         reply_markup=markups_for_bot.back_menu)

        bot.register_next_step_handler(message, add_rajon)
    elif text == "—É–¥–∞–ª–∏—Ç—å —Ä–∞–π–æ–Ω ‚ûñ":
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "SELECT name FROM rajon_list"
        cursor.execute(sql)
        articles = cursor.fetchall()

        rajon_menu = telebot.types.ReplyKeyboardMarkup()

        for i in articles:
            but = types.KeyboardButton(text=str(i))
            rajon_menu.add(but.text.strip("(),'"))
        rajon_menu.add(markups_for_bot.back)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫–æ–π —Ä–∞–π–æ–Ω –±—É–¥–µ–º —É–¥–∞–ª—è—Ç—å', reply_markup=rajon_menu)
        bot.register_next_step_handler(message, delete_rajon)
    elif text == 'üîô –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –±–æ—Ç—É':
        bot.send_message(message.chat.id, '–í—ã –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º –º–µ–Ω—é', reply_markup=markups_for_bot.main_menu)


@bot.message_handler(content_types=['text', 'photo', 'document', 'video'])
def main_menu(message):
    try:
        text = message.text.lower()
        print('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ', message.from_user.first_name, '\n–°–æ–æ–±—â–µ–Ω–∏–µ: ', text)
        bot.send_message('810046730','–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: '+ message.from_user.first_name+ '\n–°–æ–æ–±—â–µ–Ω–∏–µ: '+ text)
        ### –†–∞–∑–¥–µ–ª –ù–æ–≤–æ—Å—Ç–∏
        if text == "–Ω–æ–≤–æ—Å—Ç–∏ ‚õ™":
            s = '–†–∞–∑–¥–µ–ª –ù–æ–≤–æ—Å—Ç–∏ \n–ø–æ–º–æ–≥–∞–µ—Ç –í–∞–º –æ—Ä–∏–Ω—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –ø–æ—Ç–æ–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ ' \
                '–í–∞—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–æ—Ä—Ç–∞–ª—ã. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞.\n' \
                '–ö–Ω–æ–ø–∫–∞ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–µ–Ω—Ç—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –í–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å ' \
                '–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ—Ç –∫–∞–∫–∏—Ö –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏'
            bot.send_message(message.chat.id, s, reply_markup=markups_for_bot.news_menu)
        elif text == "–≤—Å–µ —Ç–æ—á–∫–∏ —Å–º–∏ üîä":
            conn = sqlite3.connect("spec_db.db")
            cursor = conn.cursor()
            sql = "SELECT name FROM groups"
            cursor.execute(sql)
            articles = cursor.fetchall()

            smi_menu = telebot.types.ReplyKeyboardMarkup()
            for i in articles:
                but = types.KeyboardButton(text=str(i))
                smi_menu.add(but.text.strip("(),'"))

            smi_menu.add(markups_for_bot.key_b11)
            conn.commit()
            conn.close()
            bot.send_message(message.chat.id,
                             '–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ —Ç–æ—á–∫—É –°–ú–ò –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–æ–≤–æ—Å—Ç–µ–π'
                             '', reply_markup=smi_menu)
            bot.register_next_step_handler(message, see_smi)
        elif text == "–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–µ–Ω—Ç—ã üì≤":
            bot.send_message(message.chat.id, '–†–∞–∑–¥–µ–ª –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–µ–Ω—Ç—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –í–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å'
                                              ' —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–Ω–æ–π –ø–æ—Ç–æ–∫ '
                                              '–∏ –ª–∏—á–Ω–æ –≤—ã–±–∏—Ä–∞—Ç—å –æ—Ç –∫–∞–∫–∏—Ö —Ç–æ—á–µ–∫ –°–ú–ò –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏. \n'
                                              '–ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –µ—Å–ª–∏ –í—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–Ω–æ–π –ø–æ—Ä—Ç–∞–ª.',
                             reply_markup=markups_for_bot.change_news_menu)
        elif text == '–¥–æ–±–∞–≤–∏—Ç—å —Ç–æ—á–∫—É —Å–º–∏ ‚ûï':
            conn = sqlite3.connect("spec_db.db")
            cursor = conn.cursor()
            sql = "SELECT name FROM groups"
            cursor.execute(sql)
            articles = cursor.fetchall()

            change_news_menu = telebot.types.ReplyKeyboardMarkup()
            for i in articles:
                but = types.KeyboardButton(text=str(i))
                change_news_menu.add(but.text.strip("(),'"))
            change_news_menu.add(markups_for_bot.back)

            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—á–∫—É –°–ú–ò –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å',
                             reply_markup=change_news_menu)

            bot.register_next_step_handler(message, change_smi_add)
        elif text == '—É–¥–∞–ª–∏—Ç—å —Ç–æ—á–∫—É —Å–º–∏ ‚ûñ':
            conn = sqlite3.connect("spec_db.db")
            cursor = conn.cursor()
            sql = "SELECT smi_list FROM users WHERE user_id=?"
            cursor.execute(sql, [(message.from_user.id)])
            articles = cursor.fetchone()
            if articles[0] != ';':

                change_news_menu = telebot.types.ReplyKeyboardMarkup()

                for i in str(articles).split(';'):
                    if i == '':
                        return change_news_menu.keyboard[0][0][0] == 1
                    else:
                        but = types.KeyboardButton(text=str(i))
                        change_news_menu.add(but.text.strip("(),'"))
                change_news_menu.add(markups_for_bot.back)
                if change_news_menu.keyboard[0][0] != {'text': ''} or {';': ''} != change_news_menu.keyboard[0][0]:
                    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å', reply_markup=change_news_menu)
                    bot.register_next_step_handler(message, change_smi_del)
                else:
                    bot.send_message(message.chat.id, '–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —Ç–æ—á–∫—É –°–ú–ò!',
                                     reply_markup=markups_for_bot.change_news_menu)
            else:
                bot.send_message(message.chat.id, '–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ —Ç–æ—á–∫—É –°–ú–ò!',
                                 reply_markup=markups_for_bot.change_news_menu)
        elif text == "–ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å üí¨":
            m = "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å, –≥–¥–µ –∏ –∫–æ–≥–¥–∞?\n–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤—ã —Ä–∞—Å—Å–∫–∞–∂–µ—Ç–µ –æ –≤–∞—à–µ–π –∂–∞–ª–æ–±–µ –≤–∫—Ä–∞—Ç—Ü–µ, " \
                "–Ω–∞—à —Ä–µ–¥–∞–∫—Ç–æ—Ä –ø—Ä–∏–º–µ—Ç –≤–∞—à–∏ –∑–∞–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ —Å–≤—è–∂–µ—Ç —Å –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω—ã–º–∏ –æ—Ä–≥–∞–Ω–∞–º–∏.\n" \
                "–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ —É–ª—É—á—à–µ–Ω–∏–µ –∂–∏–∑–Ω–∏ –≥–æ—Ä–æ–¥–∞ üòä\n\n" \
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –Ω–æ–≤–æ—Å—Ç–∏"
            bot.send_message(message.chat.id, m, reply_markup=markups_for_bot.raj_menu_cat)
            bot.register_next_step_handler(message, transfer_news)
        elif text == "–ø–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É üìù":
            m = "–ñ–∞–ª—É–π—Ç–µ—Å—å üòä\n\n" \
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –Ω–æ–≤–æ—Å—Ç–∏"
            bot.send_message(message.chat.id, m, reply_markup=markups_for_bot.raj_menu_cat)
            bot.register_next_step_handler(message, transfer_news2)

        ### –†–∞–∑–¥–µ–ª —É—Å–ª—É–≥–∏ –ø–æ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—é —Ä–µ–∫–ª–∞–º—ã
        elif text == "–∑–∞–∫–∞–∑–∞—Ç—å —Ä–µ–∫–ª–∞–º—É –≤ —Å–º–∏ üè™":
            s = '–î–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ –∑–∞–∫–∞–∑—É —Ä–µ–∫–ª–∞–º—ã. ' \
                '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –±—É–¥–µ—Ç –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å—Å—è, –µ–≥–æ —É–≤–∏–¥—è—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —á–∞—Ç-–±–æ—Ç–∞' \
                '\n\n–ï—Å–ª–∏ —É –í–∞—Å —É–∂–µ –∏–º–µ—é—Ç—Å—è –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è - –∫–Ω–æ–ø–∫–∞ "–†–∞–∑–º–µ—â–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã" –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç ' \
                '–í–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ä–µ–∫–ª–∞–º—ã.' \
                '\n\n–í —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤"'
            bot.send_message(message.chat.id, s, reply_markup=markups_for_bot.rec_menu)
        elif text == "—Ä–∞–∑–º–µ—â–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º—ã üéØ":
            bot.send_message(message.chat.id, '–î–ª—è –∑–∞–∫–∞–∑–∞ —É—Å–ª—É–≥–∏ –ø—Ä–æ—Å–∏–º –í–∞—Å —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∫–æ–Ω—Ç–∞–∫—Ç-–±–æ—Ç–æ–º - @kostnews2_bot'
                                              '\n–ü–æ—Å–ª–µ –∑–∞–∫–∞–∑–∞ —É—Å–ª—É–≥–∏ —Å –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä '
                                              '–¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.', reply_markup=markups_for_bot.main_menu)
        elif text == "–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ üì∏":
            bot.send_message(message.chat.id, '–î–ª—è –∑–∞–∫–∞–∑–∞ —É—Å–ª—É–≥–∏ –ø—Ä–æ—Å–∏–º –í–∞—Å —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∫–æ–Ω—Ç–∞–∫—Ç-–±–æ—Ç–æ–º - @kostnews_bot'
                                              '\n–ü–æ—Å–ª–µ –∑–∞–∫–∞–∑–∞ —É—Å–ª—É–≥–∏ —Å –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä '
                                              '–¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.', reply_markup=markups_for_bot.main_menu)
        elif text == "creative hub üí°":
            bot.send_message(message.chat.id, '–ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤–∏–¥–µ–æ Creative Hub')
            bot.send_message(message.chat.id, '–î–ª—è –∑–∞–∫–∞–∑–∞ —É—Å–ª—É–≥–∏ –ø—Ä–æ—Å–∏–º –í–∞—Å —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∫–æ–Ω—Ç–∞–∫—Ç-–±–æ—Ç–æ–º - @kostnews_bot'
                                              '\n–ü–æ—Å–ª–µ –∑–∞–∫–∞–∑–∞ —É—Å–ª—É–≥–∏ —Å –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä '
                                              '–¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.', reply_markup=markups_for_bot.main_menu)


        ### –†–∞–∑–¥–µ–ª –º–æ–π —Ä–∞–π–æ–Ω
        elif text == "–º–æ–π —Ä–∞–π–æ–Ω üè°":
            conn = sqlite3.connect("spec_db.db")
            cursor = conn.cursor()
            sql = "SELECT * FROM users WHERE user_id ={}".format(message.from_user.id)
            cursor.execute(sql)
            user = cursor.fetchone()

            ### –í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (—Ä–∞–π–æ–Ω—ã)
            conn = sqlite3.connect("spec_db.db")
            cursor = conn.cursor()
            sql = "SELECT name FROM rajon_list"
            cursor.execute(sql)
            articles = cursor.fetchall()

            rajon_menu = telebot.types.ReplyKeyboardMarkup()
            for i in articles:
                but = types.KeyboardButton(text=str(i))
                rajon_menu.add(but.text.strip("(),'"))
            rajon_menu.add(markups_for_bot.back)

            if user[3] == '–ë–µ–∑ —Ä–∞–π–æ–Ω–∞':
                bot.register_next_step_handler(message, locate_rajon)
                bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π —Ä–∞–π–æ–Ω —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –æ—Ç —Ä–∞–π–æ–Ω–∞'
                                                       '', reply_markup=rajon_menu)
            elif user[3] != '–ë–µ–∑ —Ä–∞–π–æ–Ω–∞':

                s = "–†–∞–∑–¥–µ–ª –ú–æ–π –†–∞–π–æ–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –í–∞–º –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã–¥–µ–ª–µ–Ω–µ–Ω–Ω—É—é –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ä–∞–π–æ–Ω–∞. \n" \
                    "–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ù–æ–≤–æ—Å—Ç–∏ —Ä–∞–π–æ–Ω–∞ –≤—ã –ø–æ–ø–∞–¥–µ—Ç–µ –≤ " \
                    "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –í–∞—à–µ–≥–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –í–∞–º–∏ —Ä–∞–π–æ–Ω–∞. \n" \
                    "–í–∞–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Å–≤–æ–µ–≥–æ —Ä–∞–π–æ–Ω–∞.\n " \
                    "–ö–Ω–æ–ø–∫–∞ –í—Å–µ –†–∞–π–æ–Ω—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–∞–π–æ–Ω–æ–≤ –∏ " \
                    "–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–∞–π–æ–Ω–∞.\n" \
                    "\n–í–∞—à –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–π–æ–Ω: {}".format(user[3])
                bot.send_message(message.chat.id, s, reply_markup=markups_for_bot.rajon_menu)
        elif text == "–Ω–æ–≤–æ—Å—Ç–∏ —Ä–∞–π–æ–Ω–∞ üíå":
            conn = sqlite3.connect("spec_db.db")
            cursor = conn.cursor()
            sql = "SELECT rajon FROM users WHERE user_id=?"

            cursor.execute(sql, [(message.from_user.id)])

            rajon = str(cursor.fetchone()).strip(" ' ( ) , '")

            sql2 = "SELECT url FROM rajon_list WHERE name=?"
            cursor.execute(sql2, [rajon])
            same_name = cursor.fetchone()
            text = rajon + '\n–°—Å—ã–ª–∫–∞: ' + str(same_name).strip("'()','")
            bot.send_message(message.chat.id, text, reply_markup=markups_for_bot.rajon_menu)
        elif text == "–ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å üì£":
            m = "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å, –≥–¥–µ –∏ –∫–æ–≥–¥–∞?\n–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –≤—ã —Ä–∞—Å—Å–∫–∞–∂–µ—Ç–µ –æ –≤–∞—à–µ–π –∂–∞–ª–æ–±–µ –≤–∫—Ä–∞—Ç—Ü–µ, " \
                "–Ω–∞—à —Ä–µ–¥–∞–∫—Ç–æ—Ä –ø—Ä–∏–º–µ—Ç –≤–∞—à–∏ –∑–∞–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ —Å–≤—è–∂–µ—Ç —Å –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω—ã–º–∏ –æ—Ä–≥–∞–Ω–∞–º–∏.\n" \
                "–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ —É–ª—É—á—à–µ–Ω–∏–µ –∂–∏–∑–Ω–∏ –≥–æ—Ä–æ–¥–∞ üòä\n\n" \
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –Ω–æ–≤–æ—Å—Ç–∏"
            bot.send_message(message.chat.id, m, reply_markup=markups_for_bot.raj_menu_cat)
            bot.register_next_step_handler(message, transfer_raj)


        elif text == "–∏–∑–º–µ–Ω–∏—Ç—å –º–æ–π —Ä–∞–π–æ–Ω üì´":
            conn = sqlite3.connect("spec_db.db")
            cursor = conn.cursor()
            sql = "SELECT name FROM rajon_list"
            cursor.execute(sql)
            articles = cursor.fetchall()

            rajon_menu = telebot.types.ReplyKeyboardMarkup()

            for i in articles:
                but = types.KeyboardButton(text=str(i))
                rajon_menu.row(but.text.strip("(),'"))
            rajon_menu.add(markups_for_bot.back)

            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –Ω–æ–≤—ã–π —Ä–∞–π–æ–Ω', reply_markup=rajon_menu)
            bot.register_next_step_handler(message, locate_rajon)
        elif text == "–≤—Å–µ —Ä–∞–π–æ–Ω—ã üåÜ":
            conn = sqlite3.connect("spec_db.db")
            cursor = conn.cursor()
            sql = "SELECT name FROM rajon_list"
            cursor.execute(sql)
            articles = cursor.fetchall()

            rajon_menu = telebot.types.ReplyKeyboardMarkup()

            for i in articles:
                but = types.KeyboardButton(text=str(i))
                rajon_menu.add(but.text.strip("(),'"))
            rajon_menu.add(markups_for_bot.back)
            conn.commit()
            conn.close()
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç', reply_markup=rajon_menu)
            bot.register_next_step_handler(message, see_rajon)

        ### –†–∞–∑–¥–µ–ª –∫—É–ø–ª—é/–ø—Ä–æ–¥–∞–º
        elif text == '–∫—É–ø–ª—é/–ø—Ä–æ–¥–∞–º üìç':
            s = '–†–∞–∑–¥–µ–ª –ö—É–ø–ª—é/–ø—Ä–æ–¥–∞–º –ø–æ–∑–≤–æ–ª—è–µ—Ç –í–∞–º –æ–±—ä—è–≤–∏—Ç—å –æ –∂–µ–ª–∞–µ–º–æ–π –ø–æ–∫—É–ø–∫–µ –∏–ª–∏ –ø—Ä–æ–¥–∞–∂–µ. \n' \
                '–ü—Ä–µ–∂–¥–µ —á–µ–º –í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ, –æ–Ω–æ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–∞—Ç-–±–æ—Ç–∞. \n' \
                '–¢–∞–∫–∂–µ –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∫—É–ø–ª–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π. '
            bot.send_message(message.chat.id, s, reply_markup=markups_for_bot.kp_menu)
        elif text == "–¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥–∞–∂—É üõã":
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å.',
                             reply_markup=markups_for_bot.sell_menu_cat)
            bot.register_next_step_handler(message, transfer_sell)
        elif text == "–ø–æ–∏—Å–∫ –ø—Ä–æ–¥–∞–∂–∏ üîç":
            bot.send_message(message.chat.id, '–î–ª—è –ø–æ–∏—Å–∫–∞ –ø—Ä–æ–¥–∞–∂–∏ –ø—Ä–æ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: @prodam_kostanay',
                             reply_markup=markups_for_bot.main_menu)

        ### –†–∞–∑–¥–µ–ª –ø–æ—Ç–µ—Ä—è—à–∫–∞
        elif text == '–ø–æ—Ç–µ—Ä—è—à–∫–∞ üîç':
            s = '–î–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏ –ø–æ–∏—Å–∫–∞ –ø–æ—Ç–µ—Ä—è–Ω–Ω—ã—Ö –≤–µ—â–µ–π.\n' \
                '–£ –≤–∞—Å –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–æ–±—â–∏—Ç—å –æ –Ω–∞—Ö–æ–¥–∫–µ –∏–ª–∏ –æ–±—ä—è–≤–∏—Ç—å –æ –ø–æ—Ç–µ—Ä–µ. '
            bot.send_message(message.chat.id, s, reply_markup=markups_for_bot.find_menu)
        elif text == "–¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–π–¥–µ–Ω–Ω–æ–µ üîé":
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –í—ã –ø–æ—Ç–µ—Ä—è–ª–∏.', reply_markup=markups_for_bot.find_menu_cat)
            bot.register_next_step_handler(message, transfer_nah)
        elif text == "–ø–æ–∏—Å–∫ –ø–æ—Ç–µ—Ä—è–Ω–Ω–æ–≥–æ üîç":
            bot.send_message(message.chat.id, '–î–ª—è –ø–æ–∏—Å–∫–∞ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: @poteryashka_kostanay',
                             reply_markup=markups_for_bot.main_menu)

        ### –†–∞–∑–¥–µ–ª –£—Å–ª—É–≥–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤
        elif text == '—É—Å–ª—É–≥–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ üë©‚Äçüè´':
            # s = '–í –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ –í–∞–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —É—Å–ª—É–≥–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ ' \
            #     '–∏–ª–∏ —Å–æ–≤–µ—Ä—à–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º —É—Å–ª—É–≥–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–∞—Ç-–±–æ—Ç–∞.\n' \
            #     '–í—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∑–∞–ø–æ–ª–Ω—è—é—Ç—Å—è –ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π —Ñ–æ—Ä–º–µ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º ' \
            #     '–¥–æ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ –≤ –æ–±—â–∏–π –¥–æ—Å—Ç—É–ø'
            s = '–ö –Ω–∞–º —á–∞—Å—Ç–æ –æ–±—Ä–∞—â–∞—é—Ç—Å—è —Ä–∞–∑–Ω–æ–≥–æ —Ä–æ–¥–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã, –∏ –º—ã —Ä–µ—à–∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –ø–ª–∞—Ç—Ñ–æ—Ä–º—É, ' \
                '–≥–¥–µ –í—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–≤–æ–∏ —É—Å–ª—É–≥–∏ –∏ –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω–æ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞.'
            bot.send_message(message.chat.id, s, reply_markup=markups_for_bot.spec_menu)
        elif text == "–ø–æ–∏—Å–∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ üë©‚Äçüíª":
            bot.send_message(message.chat.id, '–î–ª—è –ø–æ–∏—Å–∫–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: @specialist_kostanay',
                             reply_markup=markups_for_bot.main_menu)
        elif text == "–ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É—Å–ª—É–≥—É üë®‚Äçüîß":
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:',
                             reply_markup=markups_for_bot.spec_menu_cat)
            bot.register_next_step_handler(message, transfer_spec)
        elif text == "üîô –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            bot.send_message(message.chat.id, '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é\n–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –º–µ–Ω—é - /help'
                             , reply_markup=markups_for_bot.main_menu)



        else:
            bot.send_message(message.chat.id, '–ù–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ –≤—ã –∏–º–µ–µ—Ç–µ –≤–≤–∏–¥—É... \n–ü–µ—Ä–µ–º–µ—â–∞—é –í–∞—Å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                             reply_markup=markups_for_bot.main_menu)
    except Exception as e:
        bot.send_message(message.from_user.id,'–í–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞, —Å–ø–∞—Å–∏–±–æ —á—Ç–æ –ø–æ–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –ø—Ä–æ–±–ª–µ–º—É, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ',
                         reply_markup=markups_for_bot.main_menu)
        print(e)


### –ü—Ä–∏–µ–º –ø–æ—Å—Ç–æ–≤
@bot.channel_post_handler(content_types=['text', 'photo', 'audio', 'video', 'document'])
def process_channel_message(message):
    try:
        print(message)
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "SELECT * FROM users"
        cursor.execute(sql)
        user = cursor.fetchall()
        send_list = []
        for i in user:
            if i not in send_list:
                send_list.append(i)
                user_smi = str(i[4]).split(";")
                ## –ù–æ–≤–æ—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–∞–π–æ–Ω–∞
                if i[3] == message.chat.title:
                    bot.forward_message(i[0], message.chat.id, message.id)
                ## –ù–æ–≤–æ—Å—Ç–∏ –°–ú–ò –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫

                elif message.chat.title == '–ö–æ—Å—Ç–∞–Ω–∞–π –ù—å—é—Å':
                    bot.forward_message(i[0], message.chat.id, message.id)

                elif message.chat.title in i[4]:
                    for j in user_smi:
                        if j == message.chat.title:
                            bot.forward_message(i[0], message.chat.id, message.id)

                elif i[3] in message.text:
                    sql2 = "SELECT user_id,rajon FROM users"
                    cursor.execute(sql2)
                    user = cursor.fetchall()
                    # print(user[0][1])
                    for rajon in user:
                        if rajon[1] in message.text:
                            bot.forward_message(rajon[0], message.chat.id, message.id)
                            sql3 = "SELECT * FROM rajon_list"
                            cursor.execute(sql3)
                            rajon_list = cursor.fetchall()
                            for r in rajon_list:
                                if r[0] == rajon[1]:
                                    frwrd_rajon = '@' + str(r[1].split('/')[3])
                                    print('frwrd_rajon = ', frwrd_rajon)
                                    bot.send_message(chat_id=frwrd_rajon, text='–ù–æ–≤–æ—Å—Ç—å –æ—Ç —Ç–æ—á–∫–∏ –°–ú–ò: {}\n'
                                                                               '-----------------------\n'
                                                                               '{}'.format(message.chat.title,
                                                                                           message.text))


    except Exception as e:
        print('/////////\nAttribError\n/////////')


# –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ù–æ–≤–æ—Å—Ç–µ–π
def add_smi(message):
    if message.text != 'üîô –ù–∞–∑–∞–¥':
        if ';' in message.text:
            example1 = str(message.text).split(';')
            conn = sqlite3.connect("spec_db.db")
            cursor = conn.cursor()
            sql = "SELECT * FROM groups WHERE name=?"
            cursor.execute(sql, [(example1[0])])
            same_name = cursor.fetchone()

            if not same_name:
                newdata = [(example1[0], example1[1], example1[2])]
                cursor.executemany("INSERT INTO groups VALUES (?,?,?)", newdata)
                conn.commit()
                bot.send_message(message.chat.id, '–¢–æ—á–∫–∞ –°–ú–ò –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!',
                                 reply_markup=markups_for_bot.back_menu)
                bot.register_next_step_handler(message, admin)

            else:
                bot.send_message(message.chat.id, '–î–∞–Ω–Ω–æ–µ –∏–º—è –∫–∞–Ω–∞–ª–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ!',
                                 reply_markup=markups_for_bot.back_menu)
                bot.register_next_step_handler(message, admin)

        else:
            bot.send_message(message.chat.id, '–î–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–ø–∏—Å–∞–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!',
                             reply_markup=markups_for_bot.back_menu)
            bot.register_next_step_handler(message, admin)
    else:
        bot.send_message(message.chat.id, '–í—ã –≤ –∞–¥–º–∏–Ω–∫–µ',
                         reply_markup=markups_for_bot.hidden_menu)
        bot.register_next_step_handler(message, funk)


def see_smi(message):
    smi = message.text
    if smi != 'üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "SELECT url FROM groups WHERE name=?"
        cursor.execute(sql, [(message.text)])
        same_name = cursor.fetchone()
        text = '–ö–∞–Ω–∞–ª: ' + smi + '\n–°—Å—ã–ª–∫–∞: ' + str(same_name).strip("'()','")
        bot.send_message(message.chat.id, text, reply_markup=markups_for_bot.news_menu)
    else:
        bot.send_message(message.from_user.id, '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', reply_markup=markups_for_bot.main_menu)


def change_smi_add(message):
    if message.text != 'üîô –ù–∞–∑–∞–¥':
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "SELECT * FROM users WHERE user_id={}".format(message.from_user.id)
        cursor.execute(sql)
        user = cursor.fetchone()
        choosen_smi = message.text
        if choosen_smi not in str(user[4]):
            updatelist = str(user[4]) + '' + str(choosen_smi) + ';'
            sql2 = """ UPDATE users SET smi_list = '{}' WHERE user_id LIKE '{}'""".format(updatelist, user[0])
            cursor.execute(sql2)
            conn.commit()
            sql3 = """ SELECT * FROM users WHERE user_id={} """.format(message.from_user.id)
            cursor.execute(sql3)
            res = cursor.fetchone()
            print('res = ', res)
            bot.send_message(message.from_user.id,
                             '–í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ç–æ—á–∫–∏ –°–ú–ò: {}'
                             ''.format(choosen_smi), reply_markup=markups_for_bot.news_menu)
        else:
            bot.send_message(message.from_user.id, '–î–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª —É–∂–µ –≤ –í–∞—à–µ–º —Å–ø–∏—Å–∫–µ!',
                             reply_markup=markups_for_bot.news_menu)
    else:
        bot.send_message(message.from_user.id, '–í—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "–ù–æ–≤–æ—Å—Ç–∏"',
                         reply_markup=markups_for_bot.news_menu)


def change_smi_del(message):
    if message.text != 'üîô –ù–∞–∑–∞–¥':
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "SELECT smi_list FROM users WHERE user_id={}".format(message.from_user.id)
        cursor.execute(sql)
        user = cursor.fetchone()
        choosen_smi_del = message.text
        # print('user - ',str(user[0]).split(';'))
        new_list = []
        sql_line = ''
        for i in str(user[0]).split(';'):
            if message.text != i:
                new_list.append(i)
        # print('new_list = ',new_list)
        for j in new_list:
            sql_line = j + sql_line
        # print('sql_line = ',sql_line)
        sql2 = """ UPDATE users SET smi_list = '{};' WHERE user_id LIKE '{}'""".format(sql_line, message.from_user.id)
        print('sql2 = ',sql2)
        cursor.execute(sql2)
        conn.commit()
        bot.send_message(message.from_user.id, '–í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ –∑–∞–ø–∏—Å—å!\n', reply_markup=markups_for_bot.news_menu)
    else:
        bot.send_message(message.from_user.id, '–í—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "–ù–æ–≤–æ—Å—Ç–∏"',
                         reply_markup=markups_for_bot.news_menu)


def delete_smi(message):
    if message.text != 'üîô –ù–∞–∑–∞–¥':
        delete = message.text
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()

        sql = "DELETE FROM groups WHERE name='{}'".format(delete)
        cursor.execute(sql)
        print(sql)
        conn.commit()
        bot.send_message(message.from_user.id, '–ö–∞–Ω–∞–ª "{}" —É–¥–∞–ª–µ–Ω'.format(delete),
                         reply_markup=markups_for_bot.back_menu)
        bot.register_next_step_handler(message, admin)
    else:
        bot.send_message(message.from_user.id, '–í—ã –≤ –∞–¥–º–∏–Ω–∫–µ',
                         reply_markup=markups_for_bot.hidden_menu)
        bot.register_next_step_handler(message, funk)


# –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –†–∞–π–æ–Ω–∞
def add_rajon(message):
    if message.text != 'üîô –ù–∞–∑–∞–¥':
        if ';' in message.text:
            example1 = str(message.text).split(';')

            conn = sqlite3.connect("spec_db.db")
            cursor = conn.cursor()
            sql = "SELECT * FROM rajon_list WHERE name=?"
            cursor.execute(sql, [(example1[0])])
            same_name = cursor.fetchone()
            print(same_name)
            if not same_name:
                newdata = [(example1[0], example1[1])]
                cursor.executemany("INSERT INTO rajon_list VALUES (?,?)", newdata)
                conn.commit()
                bot.send_message(message.from_user.id, '–†–∞–π–æ–Ω –¥–æ–±–∞–≤–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!',
                                 reply_markup=markups_for_bot.back_menu)
                bot.register_next_step_handler(message, admin)
            else:
                bot.send_message(message.from_user.id, '–î–∞–Ω–Ω–æ–µ –∏–º—è —Ä–∞–π–æ–Ω–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ!',
                                 reply_markup=markups_for_bot.back_menu)
                bot.register_next_step_handler(message, admin)
        else:
            bot.send_message(message.from_user.id, '–ó–∞–ø–∏—Å—å –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø–∏—Å–∏.',
                             reply_markup=markups_for_bot.back_menu)
            bot.register_next_step_handler(message, admin)
    else:
        bot.send_message(message.from_user.id, '–í—ã –≤ –∞–¥–º–∏–Ω–∫–µ',
                         reply_markup=markups_for_bot.hidden_menu)
        bot.register_next_step_handler(message, funk)


def see_rajon(message):
    if message.text != 'üîô –ù–∞–∑–∞–¥':
        rajon = message.text
        # print(' –í—ã–±—Ä–∞–Ω–æ –°–ú–ò: ' + rajon)
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "SELECT url FROM rajon_list WHERE name=?"
        cursor.execute(sql, [(message.text)])
        same_name = cursor.fetchone()
        # print(str(same_name).strip("'()'"))

        text = '–ö–∞–Ω–∞–ª: ' + rajon + '\n–°—Å—ã–ª–∫–∞: ' + str(same_name).strip("'()','")
        bot.send_message(message.from_user.id, text, reply_markup=markups_for_bot.rajon_menu)
    else:
        bot.send_message(message.from_user.id, '–í—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "–ú–æ–π —Ä–∞–π–æ–Ω"', reply_markup=markups_for_bot.rajon_menu)


def locate_rajon(message):
    if message.text != 'üîô –ù–∞–∑–∞–¥':
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "SELECT * FROM users WHERE user_id={}".format(message.from_user.id)
        cursor.execute(sql)
        user = cursor.fetchone()

        sql_right = "SELECT name FROM rajon_list".format(message.from_user.id)
        cursor.execute(sql_right)
        rajon_list = cursor.fetchall()
        print(str(rajon_list))
        if user[3] == '–ë–µ–∑ —Ä–∞–π–æ–Ω–∞':
            sql2 = (""" UPDATE users SET rajon = '{}' WHERE user_id LIKE '{}'""").format(message.text, user[0])
            cursor.execute(sql2)
            conn.commit()
            s = "–†–∞–∑–¥–µ–ª –ú–æ–π –†–∞–π–æ–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –í–∞–º –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã–¥–µ–ª–µ–Ω–µ–Ω–Ω—É—é –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ä–∞–π–æ–Ω–∞. \n" \
                "–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ù–æ–≤–æ—Å—Ç–∏ —Ä–∞–π–æ–Ω–∞ –≤—ã –ø–æ–ø–∞–¥–µ—Ç–µ –≤ " \
                "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –í–∞—à–µ–≥–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –í–∞–º–∏ —Ä–∞–π–æ–Ω–∞. \n" \
                "–í–∞–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Å–≤–æ–µ–≥–æ —Ä–∞–π–æ–Ω–∞.\n " \
                "–ö–Ω–æ–ø–∫–∞ –í—Å–µ –†–∞–π–æ–Ω—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–∞–π–æ–Ω–æ–≤ –∏ " \
                "–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–∞–π–æ–Ω–∞.\n"
            bot.send_message(message.from_user.id, s, reply_markup=markups_for_bot.rajon_menu)
        elif message.text in str(rajon_list):
            sql2 = (""" UPDATE users SET rajon = '{}' WHERE user_id LIKE '{}'""").format(message.text, user[0])
            cursor.execute(sql2)
            conn.commit()
            bot.send_message(message.from_user.id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–æ–≤—ã–π —Ä–∞–π–æ–Ω', reply_markup=markups_for_bot.rajon_menu)
        else:
            bot.send_message(message.from_user.id, '–î–∞–Ω–Ω–æ–≥–æ —Ä–∞–π–æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
                             reply_markup=markups_for_bot.rajon_menu)
    else:
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "SELECT rajon FROM users WHERE user_id={}".format(message.from_user.id)
        cursor.execute(sql)
        user = cursor.fetchone()
        bot.send_message(message.from_user.id, '–í—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "–ú–æ–π —Ä–∞–π–æ–Ω"\n'
                                               '–í–∞—à —Ä–∞–Ω–µ–µ —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤—ã–±–æ—Ä {} –æ—Å—Ç–∞–ª—Å—è –ø—Ä–µ–∂–Ω–∏–º'.format(
            str(user).strip("'()','"))
                         , reply_markup=markups_for_bot.rajon_menu)


def delete_rajon(message):
    if message.text != 'üîô –ù–∞–∑–∞–¥':
        delete = message.text
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "DELETE FROM rajon_list WHERE name='{}'".format(delete)
        cursor.execute(sql)
        conn.commit()
        bot.send_message(message.from_user.id, '–†–∞–π–æ–Ω "{}" —É–¥–∞–ª–µ–Ω'.format(delete),
                         reply_markup=markups_for_bot.back_menu)
        bot.register_next_step_handler(message, admin)
    else:
        bot.send_message(message.from_user.id, '–í—ã –≤ –∞–¥–º–∏–Ω–∫–µ',
                         reply_markup=markups_for_bot.hidden_menu)
        bot.register_next_step_handler(message, funk)




# –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –°–µ—Ä–≤–∏—Å–æ–≤
def transfer_spec(message):
    if message.text != 'üîô –ù–∞–∑–∞–¥':
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "SELECT * FROM users WHERE user_id={}".format(message.from_user.id)
        cursor.execute(sql)
        user = cursor.fetchone()
        param = message.text
        bot.send_message(message.from_user.id, '–ü–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –ø–æ–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ –ø—Ä–∏ –µ–≥–æ –Ω–∞–ª–∏—á–∏–∏ '
                                               '–∏ –æ–ø–∏—à–∏—Ç–µ –Ω–∏–∂–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏:'
                                               '\n\n1. –ó–∞–≥–æ–ª–æ–≤–æ–∫\n2. –û–ø–∏—Å–∞–Ω–∏–µ\n3. –ö—É–¥–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è\n',
                         reply_markup=markups_for_bot.back_menu)
        # '\n–í–∞—à –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω –∫–∞–∫ \n#{}\n'.format(user[3]))
        bot.register_next_step_handler(message, service_spec, param)
    else:
        bot.send_message(message.from_user.id, '–í—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "–ù–æ–≤–æ—Å—Ç–∏"', reply_markup=markups_for_bot.spec_menu)


def transfer_news(message):
    if message.text != 'üîô –ù–∞–∑–∞–¥':
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "SELECT * FROM users WHERE user_id={}".format(message.from_user.id)
        cursor.execute(sql)
        user = cursor.fetchone()
        param = message.text
        bot.send_message(message.from_user.id, '–ü–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –ø–æ–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ –ø—Ä–∏ –µ–≥–æ –Ω–∞–ª–∏—á–∏–∏ '
                                               '–∏ –æ–ø–∏—à–∏—Ç–µ –Ω–∏–∂–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏:'
                                               '\n\n1. –ó–∞–≥–æ–ª–æ–≤–æ–∫\n2. –û–ø–∏—Å–∞–Ω–∏–µ\n3. –ö—É–¥–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è\n',
                         reply_markup=markups_for_bot.back_menu)
        # '\n–í–∞—à –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω –∫–∞–∫ \n#{}\n'.format(user[3]))
        bot.register_next_step_handler(message, service_news, param)
    else:
        bot.send_message(message.from_user.id, '–í—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "–ù–æ–≤–æ—Å—Ç–∏"', reply_markup=markups_for_bot.news_menu)

def transfer_news2(message):
    if message.text != 'üîô –ù–∞–∑–∞–¥':
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "SELECT * FROM users WHERE user_id={}".format(message.from_user.id)
        cursor.execute(sql)
        user = cursor.fetchone()
        param = message.text
        bot.send_message(message.from_user.id, '–ü–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –ø–æ–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ –ø—Ä–∏ –µ–≥–æ –Ω–∞–ª–∏—á–∏–∏ '
                                               '–∏ –æ–ø–∏—à–∏—Ç–µ –Ω–∏–∂–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏:'
                                               '\n\n1. –ó–∞–≥–æ–ª–æ–≤–æ–∫\n2. –û–ø–∏—Å–∞–Ω–∏–µ\n3. –ö—É–¥–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è\n',
                         reply_markup=markups_for_bot.back_menu)
        # '\n–í–∞—à –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω –∫–∞–∫ \n#{}\n'.format(user[3]))
        bot.register_next_step_handler(message, service_news2, param)
    else:
        bot.send_message(message.from_user.id, '–í—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "–ù–æ–≤–æ—Å—Ç–∏"', reply_markup=markups_for_bot.news_menu)


def transfer_raj(message):
    if message.text != 'üîô –ù–∞–∑–∞–¥':
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "SELECT * FROM users WHERE user_id={}".format(message.from_user.id)
        cursor.execute(sql)
        user = cursor.fetchone()
        param = message.text
        bot.send_message(message.from_user.id, '–ü–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –ø–æ–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ –ø—Ä–∏ –µ–≥–æ –Ω–∞–ª–∏—á–∏–∏ '
                                               '–∏ –æ–ø–∏—à–∏—Ç–µ –Ω–∏–∂–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏:'
                                               '\n\n1. –ó–∞–≥–æ–ª–æ–≤–æ–∫\n2. –û–ø–∏—Å–∞–Ω–∏–µ\n3. –ö—É–¥–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è\n'
                                               '\n–í–∞—à –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω –∫–∞–∫ \n#{}\n'.format(user[3]),
                         reply_markup=markups_for_bot.back_menu)
        bot.register_next_step_handler(message, service_rajon_news, param)
    else:
        bot.send_message(message.from_user.id, '–í—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "–ú–æ–π —Ä–∞–π–æ–Ω"', reply_markup=markups_for_bot.rajon_menu)


def transfer_sell(message):
    if message.text != 'üîô –ù–∞–∑–∞–¥':
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "SELECT * FROM users WHERE user_id={}".format(message.from_user.id)
        cursor.execute(sql)
        user = cursor.fetchone()
        param = message.text
        bot.send_message(message.from_user.id, '–ü–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –ø–æ–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ –ø—Ä–∏ –µ–≥–æ –Ω–∞–ª–∏—á–∏–∏ '
                                               '–∏ –æ–ø–∏—à–∏—Ç–µ –Ω–∏–∂–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏:'
                                               '\n\n1. –ó–∞–≥–æ–ª–æ–≤–æ–∫\n2. –û–ø–∏—Å–∞–Ω–∏–µ\n3. –ö—É–¥–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è\n',
                         reply_markup=markups_for_bot.back_menu)
        # '\n–í–∞—à –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω –∫–∞–∫ \n#{}\n'.format(user[3]))
        bot.register_next_step_handler(message, service_prodaja_add, param)
    else:
        bot.send_message(message.from_user.id, '–í—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "–ö—É–ø–ª—é/–ø—Ä–æ–¥–∞–º"', reply_markup=markups_for_bot.kp_menu)


def transfer_nah(message):
    if message.text != 'üîô –ù–∞–∑–∞–¥':
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "SELECT * FROM users WHERE user_id={}".format(message.from_user.id)
        cursor.execute(sql)
        user = cursor.fetchone()
        param = message.text
        bot.send_message(message.from_user.id, '–ü–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –ø–æ–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ –ø—Ä–∏ –µ–≥–æ –Ω–∞–ª–∏—á–∏–∏ '
                                               '–∏ –æ–ø–∏—à–∏—Ç–µ –Ω–∏–∂–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏:'
                                               '\n\n1. –ó–∞–≥–æ–ª–æ–≤–æ–∫\n2. –û–ø–∏—Å–∞–Ω–∏–µ\n3. –ö—É–¥–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è\n',
                         reply_markup=markups_for_bot.back_menu)
        # '\n–í–∞—à –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω –∫–∞–∫ \n#{}\n'.format(user[3]))
        bot.register_next_step_handler(message, service_poteryashka_propazha, param)
    else:
        bot.send_message(message.from_user.id, '–í—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "–ü–æ—Ç–µ—Ä—è—à–∫–∞"', reply_markup=markups_for_bot.find_menu)


def service_spec(message, param):
    if message.text != 'üîô –ù–∞–∑–∞–¥':
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "SELECT * FROM users WHERE user_id={}".format(message.from_user.id)
        cursor.execute(sql)
        user = cursor.fetchone()
        if message.content_type == 'text':
            bot.send_message(chat_id='@srvsdskfrkstnppl', text='–£—Å–ª—É–≥–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ | #{}\n'
                                                               '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n'
                                                               '------------------\n'
                             .format(param, user[1], user[2], message.text))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)
        elif message.content_type == 'photo':
            idphoto = message.photo[0].file_id
            bot.send_photo(chat_id='@srvsdskfrkstnppl', photo=idphoto, caption='–£—Å–ª—É–≥–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ | #{}\n'
                                                                               '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n'
                                                                               '------------------\n{}'
                           .format(param, user[1], user[2], message.caption))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)
        elif message.content_type == 'document':
            iddocument = message.document.file_id
            # bot.send_message(chat_id='@srvsdskfrkstnppl', text='–£—Å–ª—É–≥–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ | {}\n'
            #                                                    '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n'
            #                                                    '------------------\n{}'
            #                  .format(param, user[1], user[2], message.caption))
            bot.send_document(chat_id='@srvsdskfrkstnppl', data=iddocument, caption='–£—Å–ª—É–≥–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ | #{}\n'
                                                                                    '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n'
                                                                                    '------------------\n{}'
                              .format(param, user[1], user[2], message.caption))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)
        elif message.content_type == 'video':
            idvideo = message.video.file_id
            bot.send_video(chat_id='@srvsdskfrkstnppl', data=idvideo, caption='–û—Ç–¥–µ–ª: –£—Å–ª—É–≥–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ | #{}\n'
                                                                              '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n#{}\n'
                                                                              '------------------\n{}'
                           .format(param, user[1], user[2], user[3], message.caption))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)


    else:
        bot.send_message(message.from_user.id, '–í—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "–£—Å–ª—É–≥–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤"'
                                               '', reply_markup=markups_for_bot.spec_menu)


def service_prodaja_add(message, param):
    if message.text != 'üîô –ù–∞–∑–∞–¥':
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "SELECT * FROM users WHERE user_id={}".format(message.from_user.id)
        cursor.execute(sql)
        user = cursor.fetchone()
        if message.content_type == 'text':
            bot.send_message(chat_id='@srvsdskfrkstnppl', text='–ü—Ä–æ–¥–∞–∂–∞ | #{}\n'
                                                               '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n #{}\n'
                                                               '------------------\n{}'
                             .format(param, user[1], user[2], user[3], message.text))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)
        elif message.content_type == 'photo':
            idphoto = message.photo[0].file_id

            bot.send_photo(chat_id='@srvsdskfrkstnppl', photo=idphoto, caption='–û—Ç–¥–µ–ª: –ü—Ä–æ–¥–∞–∂–∏ | #{}\n'
                                                                               '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n#{}\n'
                                                                               '------------------\n{}'
                           .format(param, user[1], user[2], user[3], message.caption))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)
        elif message.content_type == 'document':
            iddocument = message.document.file_id
            bot.send_document(chat_id='@srvsdskfrkstnppl', data=iddocument, caption='–ü—Ä–æ–¥–∞–∂–∞ | #{}\n'
                                                                                    '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n#{}\n'
                                                                                    '------------------\n{}'
                              .format(param, user[1], user[2], user[3], message.caption))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)
        elif message.content_type == 'video':
            idvideo = message.video.file_id

            bot.send_video(chat_id='@srvsdskfrkstnppl', data=idvideo, caption='–û—Ç–¥–µ–ª: –ü–æ–∫—É–ø–∫–∏ | #{}\n'
                                                                              '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n#{}\n'
                                                                              '------------------\n{}'
                           .format(param, user[1], user[2], user[3], message.caption))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)
    else:
        bot.send_message(message.from_user.id, '–í—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "–ö—É–ø–ª—é/–ø—Ä–æ–¥–∞–º"', reply_markup=markups_for_bot.kp_menu)


def service_poteryashka_propazha(message, param):
    if message.text != 'üîô –ù–∞–∑–∞–¥':
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "SELECT * FROM users WHERE user_id={}".format(message.from_user.id)
        cursor.execute(sql)
        user = cursor.fetchone()
        if message.content_type == 'text':
            bot.send_message(chat_id='@srvsdskfrkstnppl', text='–û—Ç–¥–µ–ª: –ü–æ—Ç–µ—Ä—è–∂–∫–∞ | –ù–∞—Ö–æ–¥–∫–∞ | #{}\n'
                                                               '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n #{}\n'
                                                               '------------------\n{}'
                             .format(param, user[1], user[2], user[3], message.text))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)
        elif message.content_type == 'photo':
            idphoto = message.photo[0].file_id

            bot.send_photo(chat_id='@srvsdskfrkstnppl', photo=idphoto, caption='–û—Ç–¥–µ–ª: –ü–æ—Ç–µ—Ä—è—à–∫–∞ | #{}\n'
                                                                               '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n#{}\n'
                                                                               '------------------\n{}'
                           .format(param, user[1], user[2], user[3], message.caption))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)
        elif message.content_type == 'document':
            iddocument = message.document.file_id

            bot.send_document(chat_id='@srvsdskfrkstnppl', data=iddocument, caption='–û—Ç–¥–µ–ª: –ü–æ—Ç–µ—Ä—è—à–∫–∞ | #{}\n'
                                                                                    '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n#{}\n'
                                                                                    '------------------\n{}'
                              .format(param, user[1], user[2], user[3], message.caption))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)
        elif message.content_type == 'video':
            idvideo = message.video.file_id
            bot.send_video(chat_id='@srvsdskfrkstnppl', data=idvideo, caption='–û—Ç–¥–µ–ª: –ü–æ—Ç–µ—Ä—è—à–∫–∞ | #{}\n'
                                                                              '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n#{}\n'
                                                                              '------------------\n{}'
                           .format(param, user[1], user[2], user[3], message.caption))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)
    else:
        bot.send_message(message.from_user.id, '–í—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "–ü–æ—Ç–µ—Ä—è—à–∫–∞"', reply_markup=markups_for_bot.find_menu)


def service_rajon_news(message, param):
    if message.text != "üîô –ù–∞–∑–∞–¥":
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "SELECT * FROM users WHERE user_id={}".format(message.from_user.id)
        cursor.execute(sql)
        user = cursor.fetchone()
        print(user)
        if message.content_type == 'text':
            bot.send_message(chat_id='@srvsdskfrkstnppl', text='#{} | #{}\n'
                                                               '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n'
                                                               '------------------\n{}'
                             .format(param, user[3], user[1], user[2], message.text))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)
        elif message.content_type == 'photo':
            idphoto = message.photo[0].file_id

            bot.send_photo(chat_id='@srvsdskfrkstnppl', photo=idphoto, caption='#{} | #{}\n'
                                                                               '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n'
                                                                               '------------------\n{}'
                           .format(param, user[3], user[1], user[2], message.caption))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)
        elif message.content_type == 'document':
            iddocument = message.document.file_id

            bot.send_document(chat_id='@srvsdskfrkstnppl', data=iddocument, caption='#{} | #{}\n'
                                                                                    '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n'
                                                                                    '------------------\n{}'
                              .format(param, user[3], user[1], user[2], message.caption))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)
        elif message.content_type == 'video':
            idvideo = message.video.file_id
            bot.send_video(chat_id='@srvsdskfrkstnppl', data=idvideo, caption='#{} | #{}\n'
                                                                              '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n'
                                                                              '------------------\n{}'
                           .format(param, user[3], user[1], user[2], message.caption))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)


    else:
        bot.send_message(message.from_user.id, '–í—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "–ú–æ–π —Ä–∞–π–æ–Ω"', reply_markup=markups_for_bot.rajon_menu)


def service_news(message, param):
    if message.text != "üîô –ù–∞–∑–∞–¥":
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "SELECT * FROM users WHERE user_id={}".format(message.from_user.id)
        cursor.execute(sql)
        user = cursor.fetchone()
        print(user)
        if message.content_type == 'text':
            bot.send_message(chat_id='@srvsdskfrkstnppl', text='–ù–æ–≤–æ—Å—Ç—å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è | #{}\n'
                                                               '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n'
                                                               '------------------\n{}'
                             .format(param, user[1], user[2], message.text))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)
        elif message.content_type == 'photo':
            idphoto = message.photo[0].file_id

            bot.send_photo(chat_id='@srvsdskfrkstnppl', photo=idphoto, caption='–ù–æ–≤–æ—Å—Ç—å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è | #{}\n'
                                                                               '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n'
                                                                               '------------------\n{}'
                           .format(param, user[1], user[2], message.caption))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)
        elif message.content_type == 'document':
            iddocument = message.document.file_id

            bot.send_document(chat_id='@srvsdskfrkstnppl', data=iddocument, caption='–ù–æ–≤–æ—Å—Ç—å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è | #{}\n'
                                                                                    '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n'
                                                                                    '------------------\n{}'
                              .format(param, user[1], user[2], message.caption))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)
        elif message.content_type == 'video':
            idvideo = message.video.file_id
            bot.send_video(chat_id='@srvsdskfrkstnppl', data=idvideo, caption='–ù–æ–≤–æ—Å—Ç—å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è | #{}\n'
                                                                              '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n'
                                                                              '------------------\n{}'
                           .format(param, user[1], user[2], message.caption))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)

    else:
        bot.send_message(message.from_user.id, '–í—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "–ù–æ–≤–æ—Å—Ç–∏"', reply_markup=markups_for_bot.news_menu)

def service_news2(message, param):
    if message.text != "üîô –ù–∞–∑–∞–¥":
        conn = sqlite3.connect("spec_db.db")
        cursor = conn.cursor()
        sql = "SELECT * FROM users WHERE user_id={}".format(message.from_user.id)
        cursor.execute(sql)
        user = cursor.fetchone()
        print(user)
        if message.content_type == 'text':
            bot.send_message(chat_id='@srvsdskfrkstnppl', text='–ñ–∞–ª–æ–±–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è | #{}\n'
                                                               '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n'
                                                               '------------------\n{}'
                             .format(param, user[1], user[2], message.text))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)
        elif message.content_type == 'photo':
            idphoto = message.photo[0].file_id

            bot.send_photo(chat_id='@srvsdskfrkstnppl', photo=idphoto, caption='–ñ–∞–ª–æ–±–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è | #{}\n'
                                                                               '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n'
                                                                               '------------------\n{}'
                           .format(param, user[1], user[2], message.caption))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)
        elif message.content_type == 'document':
            iddocument = message.document.file_id

            bot.send_document(chat_id='@srvsdskfrkstnppl', data=iddocument, caption='–ñ–∞–ª–æ–±–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è | #{}\n'
                                                                                    '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n'
                                                                                    '------------------\n{}'
                              .format(param, user[1], user[2], message.caption))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)
        elif message.content_type == 'video':
            idvideo = message.video.file_id
            bot.send_video(chat_id='@srvsdskfrkstnppl', data=idvideo, caption='–ñ–∞–ª–æ–±–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è | #{}\n'
                                                                              '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {}\n–ù–æ–º–µ—Ä: {}\n'
                                                                              '------------------\n{}'
                           .format(param, user[1], user[2], message.caption))
            bot.send_message(message.from_user.id, '–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç.', reply_markup=markups_for_bot.main_menu)

    else:
        bot.send_message(message.from_user.id, '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', reply_markup=markups_for_bot.main_menu)



print("----------ChatBot works now------------")
try:
    bot.infinity_polling(timeout=10, long_polling_timeout=5)
except (ConnectionError, ReadTimeout) as e:
    sys.stdout.flush()
    os.execv(sys.argv[0], sys.argv)
    print('–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞..........................................')
else:
    bot.infinity_polling(timeout=10, long_polling_timeout=5)
